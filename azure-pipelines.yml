

trigger:
- master

resources:
- repo: self

variables:
  imageRepo: kubernetsapp
  tag: '$(Build.BuildId)'



stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build job
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        containerRegistry: 'DockerC'
        repository: '$(imageRepo)'
        command: 'buildAndPush'
        
        tags: |
          $(tag)
    - task: PublishPipelineArtifact@1
      inputs:
              targetPath: '$(Pipeline.Workspace)'
              artifact: 'manifests'
              publishLocation: 'pipeline'
   

- stage: Deploy
  displayName: Deploy to Dev
  dependsOn: Build
  variables:
   acsercret: k8sexamplesacrauth
   acrdevurl: 'kubernetsto.azurecr.io'
   replicaNo: 3
  jobs:
  - deployment: Deploy
    displayName: Deploy to AKS
    environment: 'k8dev.default'
    pool: 
       vmImage: ubuntu-latest
    strategy:
      runOnce:
        deploy:
          steps:
  
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'specific'
              project: 'b76209c2-d2ef-465d-86f4-25164a2ac25d'
              definition: '11'
              specificBuildWithTriggering: true
              buildVersionToDownload: 'latest'
              targetPath: '$(Pipeline.Workspace)'
          
          - task: KubernetesManifest@0
            inputs:
              action: 'createSecret'
              kubernetesServiceConnection: 'kubernetsAKS'
              namespace: 'default'
              secretType: 'dockerRegistry'
              secretName: '$(acsercret)'
              dockerRegistryEndpoint: 'DockerC'
          - task: KubernetesManifest@0
            inputs:
              action: 'deploy'
              kubernetesServiceConnection: 'kubernetsAKS'
              namespace: 'default'
              manifests: |
                  $(Pipeline.Workspace)/manifests/deployment.yml
                   imagePullSecrets: |
                        $(acsercret)
                        containers: '$(acrdevurl)/$(imageRepo):$(tag)'



